// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use SessionFeature;
use glib::object::IsA;
use glib::translate::*;
use soup_sys;
use std::fmt;

glib_wrapper! {
    pub struct ProxyURIResolver(Interface<soup_sys::SoupProxyURIResolver>) @requires SessionFeature;

    match fn {
        get_type => || soup_sys::soup_proxy_uri_resolver_get_type(),
    }
}

pub const NONE_PROXY_URI_RESOLVER: Option<&ProxyURIResolver> = None;

pub trait ProxyURIResolverExt: 'static {
    //#[cfg(any(feature = "v2_26_3", feature = "dox"))]
    //fn get_proxy_uri_async<P: IsA<gio::Cancellable>>(&self, uri: /*Ignored*/&mut URI, async_context: /*Ignored*/Option<&glib::MainContext>, cancellable: Option<&P>, callback: /*Unimplemented*/FnOnce(&ProxyURIResolver, u32, /*Ignored*/URI), user_data: /*Unimplemented*/Option<Fundamental: Pointer>);

    //#[cfg(any(feature = "v2_26_3", feature = "dox"))]
    //fn get_proxy_uri_sync<P: IsA<gio::Cancellable>>(&self, uri: /*Ignored*/&mut URI, cancellable: Option<&P>, proxy_uri: /*Ignored*/URI) -> u32;
}

impl<O: IsA<ProxyURIResolver>> ProxyURIResolverExt for O {
    //#[cfg(any(feature = "v2_26_3", feature = "dox"))]
    //fn get_proxy_uri_async<P: IsA<gio::Cancellable>>(&self, uri: /*Ignored*/&mut URI, async_context: /*Ignored*/Option<&glib::MainContext>, cancellable: Option<&P>, callback: /*Unimplemented*/FnOnce(&ProxyURIResolver, u32, /*Ignored*/URI), user_data: /*Unimplemented*/Option<Fundamental: Pointer>) {
    //    unsafe { TODO: call soup_sys:soup_proxy_uri_resolver_get_proxy_uri_async() }
    //}

    //#[cfg(any(feature = "v2_26_3", feature = "dox"))]
    //fn get_proxy_uri_sync<P: IsA<gio::Cancellable>>(&self, uri: /*Ignored*/&mut URI, cancellable: Option<&P>, proxy_uri: /*Ignored*/URI) -> u32 {
    //    unsafe { TODO: call soup_sys:soup_proxy_uri_resolver_get_proxy_uri_sync() }
    //}
}

impl fmt::Display for ProxyURIResolver {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "ProxyURIResolver")
    }
}
